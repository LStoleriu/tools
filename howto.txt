PRELIMINARY

So, golang is amazing. But start working with can be painfull, to many tools, tutorials, commands and more.
Fortunately are some tools and techniques for beginers and not only and i will describe some in the folowing.

What we need to start programing is a compiler and a good ide.

The last go compiler can be found here (https://golang.org/dl/) for many platforms.

A good ide used in this material are Liteide and can be found here (http://sourceforge.net/projects/liteide/files/).

We will use Ubuntu as main platform because is more easy to install and work on this sistem than other.
You will see in the follows why. 

Until here things seems to be good and clear but let say we want a good productivity and a more speed in development.
Also, let say we are beginer and we dont know more about installing compilers,ides and how to link toghether.
In any case we want to just start coding without concern about installing.

Why you shoud use LiteIde?
First LiteIDE is simple. Many other ide's have go plugins and many options but we need a simple IDE because Go is simple.
Not many futures needed in other languages are realy neccesary here.
Best of Liteide is code completion. Some think is good some think is inutile but its important if you are a beginer, a child of 10 or maybe you just dont' know yet all of packages.
LiteIDE is only for go? Not realy, gopei shell is written under.

What about Vim or other ides?
First of all here is a puzzle. The ide project, code completion project, paths, daemons, command line, commands...uff.
You must have good comand line skils to handle all of them.

Who is gopei (read gopei shell) and why you shoud use it?
Gopei was born from need of a 10 year child who want to learn go and didn't have any Linux skills.
Gopei bring all things together. Download last versions of go compiler and ide, install them and link into simple layout.
You don't need to know adresses or versions. Also running gopei again you will update environment if versions has change.
All installation process are quick, no root right and no commands.
Gopei have and will have many nice features on the switches, like git support but simply running the script allways will just install the tools.
Gopei shell logo and name means power and elegance. The second sense means a black belt kata from martial arts.


So, we start using gopei (Go Programming Environment) found here () to install and configure the entire ecosistem.

Why you shoud use Gopei?

More than that Gopei use a customizer to transform Liteide in a very precise tool which operate in very speed mode.
No history and best ergonomical settings are used.Explanations around layout build with liteide.ini.mini:
-Liteide start in fullscreen and avoid wellcome screen to start quick as posible.
-We split screen into 2 panels. Left GOPATH, right program space. Open directory from left, main.go and Ctrl+R run program. Very fast. No many clicks and no many keys.
-Customizer set liteide with no history of work or settings. why this? closing a complicated project or change settings can be more time consuming than open even the same project again.

When you shoud didn't use gopei?
Note that, this layout is my vision based on my analisis of eficient and ergonomical work.
If you are not agree with this concept consider using LiteIDE in original layout of default installation (-o flag).

What we want from a programming interface:
- to be fast
- to be easy
- to be intuitive (important!)
- to didn't be more complicated, options full and generaly loaded
- to be resetable (let say we are lost in the interface, must be a mechanism to reset at defaults)
- to be easy instalable (let say we go to another computer and we dont' want to spent a day with installing)
Liteide already do this but, even if a interface is very customizable allways exist a schema wich is the best choice in ergonomic sense.
This schema can't be on your taste but may be more ergonomic than other customizations.
Gopei try to do this.




